configfile: "config/config.yaml"


rule produce_kage_benchmark_report:
  input:
    gpu_kmer_mapper="files/benchmarks/gpu_kmer_mapper.txt",
    cpu_kmer_mapper="files/benchmarks/cpu_kmer_mapper.txt",
    kage="files/benchmarks/kage.txt",
  output:
    report="benchmark_report.html"
  shell:
    """
    python create_benchmark_report.py \
        {input.gpu_kmer_mapper} {input.cpu_kmer_mapper} {input.kage}
    """


rule run_kage:
  input:
    counts="files/produced/cpu_kmer_counts.npy",
    kmer_index="files/inputs/index_2548all_uncompressed_minimal.npz",
    variants="files/inputs/numpy_variants.npz"
  output:
    vcf="files/produced/genotypes.vcf",
  benchmark:
    "files/benchmarks/kage.txt"
  shell:
    """
    kage genotype \
        -c {input.counts} \
        -i {input.kmer_index} \
        -k {config[kmer_size]} \
        -a 15 \
        -t {config[n_threads_few]} \
        -b True \
        -o {output.vcf} \
        --variants {input.variants} \
        --do-not-write-genotype-likelihoods True
    """


rule run_gpu_kmer_mapper:
  input:
    kmer_index="files/inputs/kmer_index_only_variants_with_revcomp.npz",
    reads="files/inputs/hg002_simulated_reads_15x.fa"
  output:
    counts="files/produced/gpu_kmer_counts.npy",
  benchmark:
    "files/benchmarks/gpu_kmer_mapper.txt"
  shell:
    """kmer_mapper map \
        -i {input.kmer_index} \
        -f {input.reads} \
        -t {config[n_threads_few]} \
        -k {config[kmer_size]} \
        -c {config[gpu_chunk_size]} \
        -o {output.counts} \
        --gpu True
    """


rule run_cpu_kmer_mapper:
  input:
    kmer_index="files/inputs/kmer_index_only_variants_with_revcomp.npz",
    reads="files/inputs/hg002_simulated_reads_15x.fa"
  output:
    counts="files/produced/cpu_kmer_counts.npy",
  benchmark:
    "files/benchmarks/cpu_kmer_mapper.txt"
  shell:
    """kmer_mapper map \
        -i {input.kmer_index} \
        -f {input.reads} \
        -t {config[n_threads_few]} \
        -k {config[kmer_size]} \
        -c {config[cpu_chunk_size]} \
        -o {output.counts}
    """

